Namespace(activation='leaky_relu', arch='alexnet', batch_size=32, cls_num=0, cls_size=10, config='configs/test_config.yaml', cos=True, data='cifar10/cifar10', dim=128, final_lr=0.0048, gpu=0, hidden_dim=4096, kmeans_cls=None, lars=True, lr=4.8, model='self-classifier', num_classes=10, num_hidden=2, num_samples_per_class=9, pretrained='./saved/cifar10/alexnet/full-cifar10/from_150eps/model_best.pth.tar', print_freq=10, queue_len=1000, save_path='./test_results/alexnet/200eps/', seed=None, sgd=True, subset=0, subset_file=None, tau=0.1, use_bn=True, **{'cls-size': 10, 'hidden-dim': 4096})
=> creating model 'alexnet'
Model(
  (backbone): AlexNet(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
      (1): ReLU(inplace=True)
      (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
      (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
      (4): ReLU(inplace=True)
      (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
      (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU(inplace=True)
      (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (9): ReLU(inplace=True)
      (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (11): ReLU(inplace=True)
      (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
    (classifier): Sequential(
      (0): Dropout(p=0.5, inplace=False)
      (1): Linear(in_features=9216, out_features=4096, bias=True)
      (2): ReLU(inplace=True)
      (3): Dropout(p=0.5, inplace=False)
      (4): Linear(in_features=4096, out_features=4096, bias=True)
      (5): ReLU(inplace=True)
      (6): Linear(in_features=4096, out_features=1000, bias=True)
    )
    (fc): Identity()
  )
  (classifier_head): MLPhead(
    (mlp): Sequential(
      (0): Linear(in_features=1000, out_features=4096, bias=True)
      (1): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.01)
      (3): Linear(in_features=4096, out_features=4096, bias=True)
      (4): BatchNorm1d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): LeakyReLU(negative_slope=0.01)
      (6): Linear(in_features=4096, out_features=128, bias=True)
    )
  )
  (classifier_final): Linear(in_features=128, out_features=10, bias=False)
)
=> loading checkpoint './saved/cifar10/alexnet/full-cifar10/from_150eps/model_best.pth.tar'
=> loaded pre-trained model './saved/cifar10/alexnet/full-cifar10/from_150eps/model_best.pth.tar' (epoch 250)
=> using 1 GPUs.
Test: [  0/313]	Time  1.630 ( 1.630)
Test: [ 10/313]	Time  0.067 ( 0.210)
Test: [ 20/313]	Time  0.065 ( 0.141)
Test: [ 30/313]	Time  0.070 ( 0.117)
Test: [ 40/313]	Time  0.069 ( 0.105)
Test: [ 50/313]	Time  0.069 ( 0.099)
Test: [ 60/313]	Time  0.066 ( 0.094)
Test: [ 70/313]	Time  0.068 ( 0.090)
Test: [ 80/313]	Time  0.065 ( 0.087)
Test: [ 90/313]	Time  0.065 ( 0.085)
Test: [100/313]	Time  0.065 ( 0.083)
Test: [110/313]	Time  0.069 ( 0.081)
Test: [120/313]	Time  0.075 ( 0.080)
Test: [130/313]	Time  0.068 ( 0.080)
Test: [140/313]	Time  0.068 ( 0.079)
Test: [150/313]	Time  0.068 ( 0.078)
Test: [160/313]	Time  0.066 ( 0.078)
Test: [170/313]	Time  0.066 ( 0.077)
Test: [180/313]	Time  0.065 ( 0.076)
Test: [190/313]	Time  0.068 ( 0.076)
Test: [200/313]	Time  0.067 ( 0.075)
Test: [210/313]	Time  0.066 ( 0.075)
Test: [220/313]	Time  0.067 ( 0.074)
Test: [230/313]	Time  0.064 ( 0.074)
Test: [240/313]	Time  0.066 ( 0.074)
Test: [250/313]	Time  0.065 ( 0.074)
Test: [260/313]	Time  0.065 ( 0.073)
Test: [270/313]	Time  0.066 ( 0.073)
Test: [280/313]	Time  0.067 ( 0.073)
Test: [290/313]	Time  0.067 ( 0.073)
Test: [300/313]	Time  0.068 ( 0.072)
Test: [310/313]	Time  0.067 ( 0.072)
=> number of samples: 10000
=> number of unique assignments: 10
=> NMI: 48.768%
=> Adjusted NMI: 48.677%
=> Adjusted Rand-Index: 34.734%
=> Accuracy: 52.020%
=> saved grid_0.pdf, accuracy = 0.827, nsamples = 770
=> grid 0 labels: [6 4 4 2 6 3 6 6 6]
=> saved grid_1.pdf, accuracy = 0.752, nsamples = 890
=> grid 1 labels: [7 7 7 2 7 7 7 7 7]
=> saved grid_2.pdf, accuracy = 0.688, nsamples = 1284
=> grid 2 labels: [8 8 8 0 8 8 8 8 8]
=> saved grid_3.pdf, accuracy = 0.659, nsamples = 848
=> grid 3 labels: [4 4 4 3 4 2 4 4 4]
=> saved grid_4.pdf, accuracy = 0.623, nsamples = 853
=> grid 4 labels: [2 0 4 2 2 2 0 0 2]
=> saved grid_5.pdf, accuracy = 0.516, nsamples = 869
=> grid 5 labels: [1 9 1 1 9 9 1 9 9]
=> saved grid_6.pdf, accuracy = 0.502, nsamples = 1138
=> grid 6 labels: [9 9 9 1 9 9 9 9 9]
=> saved grid_7.pdf, accuracy = 0.344, nsamples = 1377
=> grid 7 labels: [5 4 3 0 2 2 2 5 3]
=> saved grid_8.pdf, accuracy = 0.267, nsamples = 1002
=> grid 8 labels: [5 5 3 3 7 5 0 3 3]
=> saved grid_9.pdf, accuracy = 0.166, nsamples = 969
=> grid 9 labels: [7 3 2 5 4 6 5 6 3]
